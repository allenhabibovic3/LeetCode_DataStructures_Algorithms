public int dpKnapsack(int[] w, int[] p, int n, int W)
    {
        // TODO: implement this method
    	n = p.length;
    	
    	int[][] K = new int[n+1][W+1];
    	int i, j;
    	for(i = 1; i <= n; i++) {
    		for(j = 0; j <= W; j++) {
    			if(w[i-1] > j)
    				K[i][j] = K[i-1][j];
    			else 
    				K[i][j] = Integer.max(K[i-1][j], K[i-1][j-w[i-1]] + p[i-1]);
    		}
    	}
    	
    	return K[n][W];
         // replace this statement with your own return 
    }
